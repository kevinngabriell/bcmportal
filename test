function findFirstAvailableValue(row: Record<string, any>, keys: string[], suffix: string): string | null {
  for (const key of keys) {
    const fullKey = `${key}${suffix}`.trim();
    if (row[fullKey] != null && row[fullKey] !== "") {
      return row[fullKey];
    }
    if (row[key] != null && row[key] !== "") {
      return row[key];
    }
  }
  return null;
}

function processQuestionItems(
  items: QuestionItem[],
  row: Record<string, any>,
  suffix: string,
  target: (string | null)[][]
) {
  for (const item of items) {
    if (item.type === "title") {
      target.push([""]);
      target.push([item.label]);
    } else if (item.type === "question" && item.keys) {
      const value = findFirstAvailableValue(row, item.keys, suffix);
      target.push([item.label, value]);

      if (value === "Ya" && item.followUpsIfYes) {
        processQuestionItems(item.followUpsIfYes, row, suffix, target);
      } else if (value === "Tidak" && item.followUpsIfNo) {
        processQuestionItems(item.followUpsIfNo, row, suffix, target);
      }
    }
  }
}

questionList.forEach((category) => {
  // Logic pilih target (misal karena APAR sesuai atau tidak)
  const dataTarget = sesuaiData;

  processQuestionItems(category.items, rowClean, suffix, dataTarget);
});